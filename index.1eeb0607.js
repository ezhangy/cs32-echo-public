class e{makeInnerHTML(e){return`<p>${e}</p>`}}class n{toHTMLTemplate(){const e=document.createElement("template");return e.innerHTML=this.creator.makeInnerHTML(this.codeObj),e}constructor(e,n){this.codeObj=e,this.creator=n}}class t{makeInnerHTML(e){const{command:t,outputCreator:o,output:s,isResultVerbose:l}=e,r=new n(s,o).toHTMLTemplate().innerHTML;return l?`<div>\n          <p class="${c.COMMANDTEXT}">\n            Command: ${t}\n          </p>\n          <div class="${c.COMMANDOUTPUT}">\n            <span class="${c.COMMANDOUTPUTLABEL}">Output:</span>${r}\n         </div>\n        </div>`:`<div class="${c.COMMANDOUTPUT}">${r}</div>`}}const o=[["tim","nelson","instructor"],["john","doe","student"],["jane","doe","student"]],s=[[0,1,2],[2,3,4],[5,3,4]],l={"emptyCSV.csv":[],"stringCSV.csv":o,"numberCSV.csv":s},r={[JSON.stringify(["0","tim"])]:[o[0]],[JSON.stringify(["1","nelson"])]:[o[0]],[JSON.stringify(["2","instructor"])]:[o[0]],[JSON.stringify(["0","john"])]:[o[1]],[JSON.stringify(["0","jane"])]:[o[2]],[JSON.stringify(["1","doe"])]:[o[1],o[2]],[JSON.stringify(["2","student"])]:[o[1],o[2]]},u={[JSON.stringify(["0","0"])]:[s[0]],[JSON.stringify(["1","1"])]:[s[0]],[JSON.stringify(["0","2"])]:[s[1]],[JSON.stringify(["2","2"])]:[s[0]],[JSON.stringify(["1","3"])]:[s[1],s[2]],[JSON.stringify(["2","4"])]:[s[1],s[2]],[JSON.stringify(["0","5"])]:[s[2]]};class i{makeCellHTML(e){return`<td>${"number"==typeof e?e.toString():e}</td>`}makeInnerHTML(e){return`<tr>${e.map((e=>this.makeCellHTML(e))).join("\n")}</tr>`}}class a{makeInnerHTML(e){return`<table>${e.map((e=>(new i).makeInnerHTML(e))).join("\n")}</table>`}}window.onload=()=>{!function(){const o=document.getElementsByClassName("repl-button").item(0);null==o?console.log("Couldn't find input element"):o instanceof HTMLButtonElement?o.addEventListener("click",(()=>(function(n){const t=document.getElementsByClassName("repl-command-box").item(0);if(null==t)console.log("Couldn't find input element");else if(t instanceof HTMLInputElement){const o=t;!function(n,t){const o=function(e){const n=/(?:[^\s"]+|"[^"]*")+/g,t=e.match(n);return null!=t?t.filter((e=>null!=e||" "===e)).map((e=>{const n=e.length-1;return'"'===e[0]&&'"'===e[n]?e.substring(1,n):e})):[]}(t);if(0===o.length)d.push({command:t,output:"submitted empty string",outputCreator:new e,isResultVerbose:f});else if(o[0]in n){const e=n[o[0]];d.push(e.run(o,t))}else d.push({command:t,output:`command ${o[0]} not found`,outputCreator:new e,isResultVerbose:f})}(n,o.value),o.value=""}else console.log(`Found element ${t}, but it wasn't an input`)}(p),void function(){const e=document.getElementsByClassName("repl-history").item(0);var o;null==e?console.log('Couldn\'t find div with class "repl-history"'):e instanceof HTMLDivElement?e.replaceChildren(...(o=d,o.map((e=>function(e){const o=document.createElement("template"),s=new n(e,new t).toHTMLTemplate().innerHTML,l=`${c.COMMANDLOG} ${e.isResultVerbose?c.VERBOSELOG:c.BRIEFLOG}`;return o.innerHTML=`\n    <output class="${l}"/>\n      <span class=${c.ARROWSPAN}>></span> ${s}\n    <output />`,o.content}(e)))).reverse()):console.log(`Found element ${e}, but it wasn't a div`)}()))):console.log(`Found element ${o}, but it wasn't an input`)}()};const c={COMMANDLOG:"command-log",ARROWSPAN:"console-arrow",COMMANDOUTPUT:"command-output",COMMANDOUTPUTLABEL:"command-output-label",COMMANDTEXTLABEL:"command-output-label",COMMANDTEXT:"command-text",BRIEFLOG:"brief-log",VERBOSELOG:"verbose-log"};let m,d=[];const p={mode:new class{run(n,t){var o;o=!g(),f=o;let s="mode changed to "+(g()?"verbose":"brief");return{command:t,outputCreator:new e,output:s,isResultVerbose:g()}}},load_file:new class{loadHelper(e){return e in l&&(m=l[e],!0)}run(n,t){let o=`Exception: load_file expected 1 argument but found ${n.length-1}.`;return 2==n.length&&(o=this.loadHelper(n[1])?`Successfully loaded ${n[1]}.`:`Could not find ${n[1]}.`),{command:t,outputCreator:new e,output:o,isResultVerbose:g()}}},view:new class{viewHelper(){return null==m||null==m?null:m}run(n,t){let o;return o=1==n.length?null!=m&&null!=this.viewHelper()?m:"No CSV file loaded.":`Exception: view expected 0 arguments but found ${n.length-1}.`,{command:t,outputCreator:"string"==typeof o?new e:new a,output:o,isResultVerbose:g()}}},search:new class{searchHelper(e,n){const t=JSON.stringify([e,n]);return null===m?null:m===l["numberCSV.csv"]?t in u?u[t]:[]:m===l["stringCSV.csv"]?t in r?r[t]:[]:0===m.length?[]:null}run(n,t){let o;if(3==n.length){const e=this.searchHelper(n[1],n[2]);o=null==e?"No CSV file loaded.":0===e.length?"No search results found.":e}else o=`Exception: search expected 2 arguments but found ${n.length-1}.`;return{command:t,outputCreator:"string"==typeof o?new e:new a,output:o,isResultVerbose:g()}}}};let f=!1;function g(){return f}
//# sourceMappingURL=index.1eeb0607.js.map
