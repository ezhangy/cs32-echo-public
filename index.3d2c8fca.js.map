{"mappings":"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","sources":["node_modules/@swc/helpers/src/_array_like_to_array.mjs","node_modules/@swc/helpers/src/_array_without_holes.mjs","node_modules/@swc/helpers/src/_iterable_to_array.mjs","node_modules/@swc/helpers/src/_non_iterable_spread.mjs","node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs","node_modules/@swc/helpers/src/_to_consumable_array.mjs","node_modules/@swc/helpers/src/_class_call_check.mjs","node_modules/@swc/helpers/src/_create_class.mjs","src/components/creators/ParagraphEltCreator.js","<<jsx-config-pragma.js>>","src/components/HTMLConverter.js","src/components/creators/ResultCreator.js","node_modules/@swc/helpers/src/_define_property.mjs","src/mockedJson.js","src/components/commands/Load.js","src/main.js","src/components/commands/Mode.js","src/components/csv/CSVCreators.js","src/components/commands/Search.js","src/components/commands/View.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n","import _arrayLikeToArray from './_array_like_to_array.mjs';\n\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","import _arrayLikeToArray from './_array_like_to_array.mjs';\n\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\n    return _arrayLikeToArray(o, minLen);\n}\n","import arrayWithoutHoles from './_array_without_holes.mjs';\nimport iterableToArray from './_iterable_to_array.mjs';\nimport nonIterableSpread from './_non_iterable_spread.mjs';\nimport unsupportedIterableToArray from './_unsupported_iterable_to_array.mjs';\n\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","export class ParagraphEltCreator {\n    makeInnerHTML(javascriptObj) {\n        return `<p>${javascriptObj}</p>`;\n    }\n}\n",null,"export class HTMLConverter {\n    constructor(codeObj, creator) {\n        this.codeObj = codeObj;\n        this.creator = creator;\n    }\n    toHTMLTemplate() {\n        const template = document.createElement(\"template\");\n        template.innerHTML = this.creator.makeInnerHTML(this.codeObj);\n        return template;\n    }\n}\n","import { HTMLConverter } from \"../HTMLConverter.js\";\nimport { globalClassNames } from \"../../main.js\";\nexport class ResultCreator {\n    makeInnerHTML(javascriptObj) {\n        const { command, outputCreator, output, isResultVerbose } = javascriptObj;\n        const outputHTML = new HTMLConverter(output, outputCreator)\n            .toHTMLTemplate()\n            .innerHTML;\n        return isResultVerbose\n            ? `<div>\n          <p class=\"${globalClassNames.COMMANDTEXT}\">\n            Command: ${command}\n          </p>\n          <div class=\"${globalClassNames.COMMANDOUTPUT}\">\n            <span class=\"${globalClassNames.COMMANDOUTPUTLABEL}\">Output:</span>${outputHTML}\n         </div>\n        </div>`\n            : `<div class=\"${globalClassNames.COMMANDOUTPUT}\">${outputHTML}</div>`;\n    }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","const emptyCSV = [];\nconst stringCSV = [\n    [\"tim\", \"nelson\", \"instructor\"],\n    [\"john\", \"doe\", \"student\"],\n    [\"jane\", \"doe\", \"student\"],\n];\nconst numberCSV = [\n    [0, 1, 2],\n    [2, 3, 4],\n    [5, 3, 4],\n];\nconst mockLoadMap = {\n    [\"emptyCSV.csv\"]: emptyCSV,\n    [\"stringCSV.csv\"]: stringCSV,\n    [\"numberCSV.csv\"]: numberCSV,\n};\nconst stringCSVSearchMap = {\n    [JSON.stringify([\"0\", \"tim\"])]: [stringCSV[0]],\n    [JSON.stringify([\"1\", \"nelson\"])]: [stringCSV[0]],\n    [JSON.stringify([\"2\", \"instructor\"])]: [stringCSV[0]],\n    [JSON.stringify([\"0\", \"john\"])]: [stringCSV[1]],\n    [JSON.stringify([\"0\", \"jane\"])]: [stringCSV[2]],\n    [JSON.stringify([\"1\", \"doe\"])]: [stringCSV[1], stringCSV[2]],\n    [JSON.stringify([\"2\", \"student\"])]: [stringCSV[1], stringCSV[2]],\n};\nconst numberCSVSearchMap = {\n    [JSON.stringify([\"0\", \"0\"])]: [numberCSV[0]],\n    [JSON.stringify([\"1\", \"1\"])]: [numberCSV[0]],\n    [JSON.stringify([\"0\", \"2\"])]: [numberCSV[1]],\n    [JSON.stringify([\"2\", \"2\"])]: [numberCSV[0]],\n    [JSON.stringify([\"1\", \"3\"])]: [numberCSV[1], numberCSV[2]],\n    [JSON.stringify([\"2\", \"4\"])]: [numberCSV[1], numberCSV[2]],\n    [JSON.stringify([\"0\", \"5\"])]: [numberCSV[2]],\n};\n// Provide this to other modules (e.g., for testing!)\n// The configuration in this project will require /something/ to be exported.\nexport { mockLoadMap, stringCSVSearchMap, numberCSVSearchMap };\n","import { getIsModeVerbose, setLoadedCSV } from \"../../main.js\";\nimport { mockLoadMap } from \"../../mockedJson.js\";\nimport { ParagraphEltCreator } from \"../creators/ParagraphEltCreator.js\";\nexport class Load {\n    loadHelper(filePath) {\n        if (filePath in mockLoadMap) {\n            setLoadedCSV(mockLoadMap[filePath]);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    run(args, commandText) {\n        let output = `Exception: load_file expected 1 argument but found ${args.length - 1}.`;\n        if (args.length == 2) {\n            if (this.loadHelper(args[1])) {\n                output = `Successfully loaded ${args[1]}.`;\n            }\n            else {\n                output = `Could not find ${args[1]}.`;\n            }\n        }\n        return {\n            command: commandText,\n            outputCreator: new ParagraphEltCreator(),\n            output: output,\n            isResultVerbose: getIsModeVerbose()\n        };\n    }\n}\n","import { ParagraphEltCreator } from \"./components/creators/ParagraphEltCreator.js\";\nimport { ResultCreator } from \"./components/creators/ResultCreator.js\";\nimport { Load, Mode, Search, View, } from \"./components/commands/allcommands.js\";\nimport { HTMLConverter } from \"./components/HTMLConverter.js\";\nimport { mockLoadMap } from \"./mockedJson.js\";\n// The window.onload callback is invoked when the window is first loaded by the browser\nwindow.onload = () => {\n    prepareMouseClick();\n    // If you're adding an event for a button click, do something similar.\n    // The event name in that case is \"click\", not \"keypress\", and the type of the element\n    // should be HTMLButtonElement. The handler function for a \"click\" takes no arguments.\n};\n// global class names\nconst globalClassNames = {\n    COMMANDLOG: \"command-log\",\n    ARROWSPAN: \"console-arrow\",\n    COMMANDOUTPUT: \"command-output\",\n    COMMANDOUTPUTLABEL: \"command-output-label\",\n    COMMANDTEXTLABEL: \"command-output-label\",\n    COMMANDTEXT: \"command-text\",\n    BRIEFLOG: \"brief-log\",\n    VERBOSELOG: \"verbose-log\",\n};\nlet loadedCSV;\nlet history = [];\nconst defaultCommandMap = {\n    mode: new Mode(),\n    load_file: new Load(),\n    view: new View(),\n    search: new Search(),\n};\nlet isModeVerbose = false;\nfunction getIsModeVerbose() {\n    return isModeVerbose;\n}\nfunction setVerbosity(newIsModeVerbose) {\n    isModeVerbose = newIsModeVerbose;\n}\nfunction setLoadedCSV(csvToLoad) {\n    loadedCSV = csvToLoad;\n}\nfunction prepareMouseClick() {\n    const maybeInputs = document.getElementsByClassName(\"repl-button\");\n    const maybeInput = maybeInputs.item(0);\n    if (maybeInput == null) {\n        console.log(\"Couldn't find input element\");\n    }\n    else if (!(maybeInput instanceof HTMLButtonElement)) {\n        console.log(`Found element ${maybeInput}, but it wasn't an input`);\n    }\n    else {\n        // Notice that we're passing *THE FUNCTION* as a value, not calling it.\n        // The browser will invoke the function when a key is pressed with the input in focus.\n        //  (This should remind you of the strategy pattern things we've done in Java.)\n        maybeInput.addEventListener(\"click\", () => updateHistoryAndRender(defaultCommandMap));\n    }\n}\n// We'll use a global state reference for now\nlet pressCount = 0;\nfunction getPressCount() {\n    return pressCount;\n}\nlet clickCount = 0;\nfunction getMouseClickCount() {\n    return clickCount;\n}\nfunction handleKeypress(event) {\n    // The event has more fields than just the key pressed (e.g., Alt, Ctrl, etc.)\n    pressCount = pressCount + 1;\n    console.log(`key pressed: ${event.key}. ${getPressCount()} presses seen so far.`);\n}\nfunction parseArgs(inputStr) {\n    const regex = /(?:[^\\s\"]+|\"[^\"]*\")+/g;\n    const regexMatches = inputStr.match(regex);\n    const args = regexMatches != null\n        ? stripWrapQuotes(regexMatches.filter((n) => n != null || n === \" \"))\n        : [];\n    return args;\n}\nfunction stripWrapQuotes(rawArgs) {\n    return rawArgs.map((arg) => {\n        const endIndex = arg.length - 1;\n        const hasWrapQuotes = ((arg[0] === '\"' && arg[endIndex] === '\"'));\n        return hasWrapQuotes ? arg.substring(1, endIndex) : arg;\n    });\n}\nfunction pushHistoryElt(commandMap, inputStr) {\n    const args = parseArgs(inputStr);\n    if (args.length === 0) {\n        history.push({\n            command: inputStr,\n            output: \"submitted empty string\",\n            outputCreator: new ParagraphEltCreator(),\n            isResultVerbose: isModeVerbose,\n        });\n    }\n    else if (args[0] in commandMap) {\n        const command = commandMap[args[0]];\n        history.push(command.run(args, inputStr));\n    }\n    else {\n        history.push({\n            command: inputStr,\n            output: `command ${args[0]} not found`,\n            outputCreator: new ParagraphEltCreator(),\n            isResultVerbose: isModeVerbose\n        });\n    }\n}\nfunction updateCommandHistoryState(commandMap) {\n    const maybeInputs = document.getElementsByClassName(\"repl-command-box\");\n    // Assumption: there's only one thing\n    const maybeInput = maybeInputs.item(0);\n    // Is the thing there? Is it of the expected type?\n    //  (Remember that the HTML author is free to assign the repl-input class to anything :-) )\n    if (maybeInput == null) {\n        console.log(\"Couldn't find input element\");\n    }\n    else if (!(maybeInput instanceof HTMLInputElement)) {\n        console.log(`Found element ${maybeInput}, but it wasn't an input`);\n    }\n    else {\n        // Notice that we're passing *THE FUNCTION* as a value, not calling it.\n        // The browser will invoke the function when a key is pressed with the input in focus.\n        //  (This should remind you of the strategy pattern things we've done in Java.)\n        const commandInput = maybeInput;\n        pushHistoryElt(commandMap, commandInput.value);\n        commandInput.value = \"\";\n    }\n}\nfunction updateHistoryAndRender(commandMap) {\n    updateCommandHistoryState(commandMap);\n    renderCommandHistory();\n}\nfunction makeResultDiv(result) {\n    const resultTemplate = document.createElement(\"template\");\n    const resultHTML = new HTMLConverter(result, new ResultCreator()).toHTMLTemplate().innerHTML;\n    const outputClassName = `${globalClassNames.COMMANDLOG} ${result.isResultVerbose\n        ? globalClassNames.VERBOSELOG\n        : globalClassNames.BRIEFLOG}`;\n    resultTemplate.innerHTML = `\n    <output class=\"${outputClassName}\"/>\n      <span class=${globalClassNames.ARROWSPAN}>></span> ${resultHTML}\n    <output />`;\n    return resultTemplate.content;\n}\nfunction makeResultDivList(history) {\n    return history.map((result) => makeResultDiv(result));\n}\nfunction renderCommandHistory() {\n    const maybeHistoryDivs = document.getElementsByClassName(\"repl-history\");\n    const maybeHistoryDiv = maybeHistoryDivs.item(0);\n    if (maybeHistoryDiv == null) {\n        console.log(`Couldn't find div with class \"repl-history\"`);\n    }\n    else if (!(maybeHistoryDiv instanceof HTMLDivElement)) {\n        console.log(`Found element ${maybeHistoryDiv}, but it wasn't a div`);\n    }\n    else {\n        // TODO: make historyDiv global\n        const historyDiv = maybeHistoryDiv;\n        historyDiv.replaceChildren(...makeResultDivList(history).reverse());\n    }\n}\nfunction clearHistory() {\n    history = [];\n}\nfunction getHistory() {\n    //defensive copy\n    return history.slice();\n}\nfunction resetMode() {\n    isModeVerbose = false;\n}\nfunction resetLoadedCSV() {\n    loadedCSV = null;\n}\n// Provide this to other modules (e.g., for testing!)\n// The configuration in this project will require /something/ to be exported.\nexport { handleKeypress, resetMode, getIsModeVerbose, getPressCount, loadedCSV, setVerbosity, setLoadedCSV, clearHistory, getHistory, pushHistoryElt, updateCommandHistoryState, renderCommandHistory, defaultCommandMap, updateHistoryAndRender, globalClassNames, parseArgs, resetLoadedCSV, mockLoadMap };\n","import { setVerbosity, getIsModeVerbose } from \"../../main.js\";\nimport { ParagraphEltCreator } from \"../creators/ParagraphEltCreator.js\";\nexport class Mode {\n    run(args, commandText) {\n        setVerbosity(!getIsModeVerbose());\n        let output = `mode changed to ${getIsModeVerbose() ? \"verbose\" : \"brief\"}`;\n        return {\n            command: commandText,\n            outputCreator: new ParagraphEltCreator(),\n            output: output,\n            isResultVerbose: getIsModeVerbose()\n        };\n    }\n}\n","export class CSVRowCreator {\n    makeCellHTML(cell) {\n        let cellStr = typeof cell === \"number\"\n            ? cell.toString()\n            : cell;\n        return `<td>${cellStr}</td>`;\n    }\n    makeInnerHTML(javascriptObj) {\n        return `<tr>${javascriptObj\n            .map((cell) => this.makeCellHTML(cell))\n            .join(\"\\n\")}</tr>`;\n    }\n}\nexport class TableCreator {\n    makeInnerHTML(javascriptObj) {\n        return `<table>${javascriptObj\n            .map((row) => (new CSVRowCreator().makeInnerHTML(row)))\n            .join(\"\\n\")}</table>`;\n    }\n}\n","import { getIsModeVerbose, loadedCSV, mockLoadMap } from \"../../main.js\";\nimport { numberCSVSearchMap, stringCSVSearchMap } from \"../../mockedJson.js\";\nimport { TableCreator } from \"../csv/CSVCreators.js\";\nimport { ParagraphEltCreator } from \"../creators/ParagraphEltCreator.js\";\nexport class Search {\n    searchHelper(column, searchTerm) {\n        const stringTerm = JSON.stringify([column, searchTerm]);\n        if (loadedCSV === null) {\n            return null;\n        }\n        else if (loadedCSV === mockLoadMap[\"numberCSV.csv\"]) {\n            return stringTerm in numberCSVSearchMap\n                ? numberCSVSearchMap[stringTerm]\n                : [];\n        }\n        else if (loadedCSV === mockLoadMap[\"stringCSV.csv\"]) {\n            return stringTerm in stringCSVSearchMap\n                ? stringCSVSearchMap[stringTerm]\n                : [];\n        }\n        else if (loadedCSV.length === 0) {\n            return [];\n        }\n        else {\n            return null;\n        }\n    }\n    run(args, commandText) {\n        let toReturn;\n        if (args.length == 3) {\n            const searchResult = this.searchHelper(args[1], args[2]);\n            if (searchResult == null) {\n                toReturn = `No CSV file loaded.`;\n            }\n            else if (searchResult.length === 0) {\n                toReturn = `No search results found.`;\n            }\n            else {\n                toReturn = searchResult;\n            }\n        }\n        else {\n            toReturn = `Exception: search expected 2 arguments but found ${args.length - 1}.`;\n        }\n        return {\n            command: commandText,\n            outputCreator: typeof toReturn === \"string\"\n                ? new ParagraphEltCreator()\n                : new TableCreator(),\n            output: toReturn,\n            isResultVerbose: getIsModeVerbose(),\n        };\n    }\n}\n","import { loadedCSV, getIsModeVerbose } from \"../../main.js\";\nimport { TableCreator } from \"../csv/CSVCreators.js\";\nimport { ParagraphEltCreator } from \"../creators/ParagraphEltCreator.js\";\nexport class View {\n    viewHelper() {\n        if (loadedCSV == undefined || loadedCSV == null) {\n            return null;\n        }\n        else {\n            return loadedCSV;\n        }\n    }\n    run(args, commandText) {\n        let toReturn;\n        if (args.length == 1) {\n            if (loadedCSV != null && this.viewHelper() != null) {\n                toReturn = loadedCSV;\n            }\n            else {\n                toReturn = `No CSV file loaded.`;\n            }\n        }\n        else {\n            toReturn = `Exception: view expected 0 arguments but found ${args.length - 1}.`;\n        }\n        return {\n            command: commandText,\n            outputCreator: typeof toReturn === \"string\"\n                ? new ParagraphEltCreator()\n                : new TableCreator(),\n            output: toReturn,\n            isResultVerbose: getIsModeVerbose(),\n        };\n    }\n}\n"],"names":["$707285ee35fc6192$export$2e2bcd8739ae039","arr","len","length","i","arr2","Array","$c194acc16195b2fe$export$2e2bcd8739ae039","isArray","$4a70674e361052f0$export$2e2bcd8739ae039","iter","Symbol","iterator","from","$b4993938a65ca801$export$2e2bcd8739ae039","TypeError","$4cbdc253d077b005$export$2e2bcd8739ae039","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","$f1a6e2915894b466$export$2e2bcd8739ae039","$283f2b3ccba52a92$export$2e2bcd8739ae039","instance","Constructor","$699f3e5088c0b935$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","$699f3e5088c0b935$export$2e2bcd8739ae039","protoProps","staticProps","$015c786f364cc0e4$export$2aff89cd05f52157","ParagraphEltCreator","javascriptObj","concat","$feed1194b0a8d387$export$f5a9a65d2e15c4e8","HTMLConverter","codeObj","creator","this","template","document","createElement","innerHTML","makeInnerHTML","$d41e9156b1af734f$export$30804696d6eca4f3","ResultCreator","command","outputCreator","output","isResultVerbose","outputHTML","toHTMLTemplate","$f9842f2de5eb5719$export$779f425558a43dd7","COMMANDTEXT","COMMANDOUTPUT","COMMANDOUTPUTLABEL","$d4e16d00918f299c$export$2e2bcd8739ae039","obj","value","$2c83d3f5dd7f9118$var$_obj","$2c83d3f5dd7f9118$var$_obj1","$2c83d3f5dd7f9118$var$_obj2","$2c83d3f5dd7f9118$var$stringCSV","$2c83d3f5dd7f9118$var$numberCSV","$2c83d3f5dd7f9118$export$f5a2bb776b27303b","$2c83d3f5dd7f9118$export$c2e9d8949b749aa2","JSON","stringify","$2c83d3f5dd7f9118$export$87dcfd807ec7701a","$a7cadd35b5080d5d$export$af7ae1483aa30568","Load","filePath","$f9842f2de5eb5719$export$2e4dd4baf94d6210","args","commandText","loadHelper","$f9842f2de5eb5719$export$1afdf0990a3bc820","$987cc0afbc68faaf$export$9484bbecc3c49a2e","Mode","newIsModeVerbose","$f9842f2de5eb5719$var$isModeVerbose","$efc755facd8c9598$export$673557b37520d7dc","CSVRowCreator","cell","cellStr","map","_this","makeCellHTML","join","$efc755facd8c9598$export$3ec714a5d1075acd","TableCreator","row","$ac03e66010bd4b30$export$4b85d3515bd863a5","Search","column","searchTerm","stringTerm","toReturn","searchResult","searchHelper","$76f7f3e95c8dafa2$export$27a5bd065ad55220","View","undefined","viewHelper","window","onload","maybeInput","getElementsByClassName","item","console","log","HTMLButtonElement","addEventListener","commandMap","HTMLInputElement","commandInput","inputStr","regex","regexMatches","match","filter","arg","endIndex","substring","$f9842f2de5eb5719$export$7300a92932ee17a3","$f9842f2de5eb5719$var$history","push","run","$f9842f2de5eb5719$export$37172017dea63481","$f9842f2de5eb5719$export$3ba586e04ef269bc","$f9842f2de5eb5719$export$924ed447de4a3d0b","history","maybeHistoryDiv","HTMLDivElement","_historyDiv","replaceChildren","apply","result","resultTemplate","resultHTML","outputClassName","COMMANDLOG","VERBOSELOG","BRIEFLOG","ARROWSPAN","content","$f9842f2de5eb5719$var$makeResultDiv","reverse","$f9842f2de5eb5719$export$fea9a36a0356682f","COMMANDTEXTLABEL","mode","load_file","view","search"],"version":3,"file":"index.3d2c8fca.js.map"}